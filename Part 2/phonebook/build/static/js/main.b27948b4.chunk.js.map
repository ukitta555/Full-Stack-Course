{"version":3,"sources":["services/personsBackend.js","components/DeletePersonButton.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newEntry","post","id","delete","put","DeletePersonButton","person","handleClick","onClick","Person","handleDeleteButtonClick","name","phone","Persons","persons","filter","toLocaleLowerCase","includes","map","key","Filter","changeFilter","value","onChange","PersonForm","props","onSubmit","addNumber","newName","changeNameInput","newPhoneNumber","changePhoneInput","type","Notification","message","styleType","className","App","useState","setPersons","setNewName","setNewPhoneNumber","setFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personService","showMessage","setTimeout","showError","error","event","target","preventDefault","alert","indexOf","index","console","log","window","confirm","entry","catch","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b27948b4.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseURL = '/api/persons'\r\n\r\n\r\nconst getAll = () =>\r\n{\r\n  const request = axios.get (baseURL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = newEntry =>\r\n{\r\n  const request = axios.post (baseURL, newEntry)\r\n  return request.then (response => response.data)\r\n}\r\n\r\nconst deletePerson = id =>\r\n{\r\n  return  axios.delete (`${baseURL}/${id}`)\r\n}\r\n\r\nconst changePerson = (id, newEntry) =>\r\n{\r\n  const request = axios.put (`${baseURL}/${id}`, newEntry)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, addPerson, deletePerson, changePerson}","import React from 'react'\r\n\r\nconst DeletePersonButton = ({person, handleClick}) =>\r\n{\r\n  \r\n  return <button onClick = {() => handleClick(person)}> delete </button>\r\n}\r\n\r\nexport default DeletePersonButton","import React from \"react\" \r\nimport DeletePersonButton from \"./DeletePersonButton\"\r\n\r\nconst Person = ({person, handleDeleteButtonClick}) => {\r\n  return (\r\n    <>\r\n    <li> \r\n      {person.name} {person.phone}\r\n      <DeletePersonButton person = {person} \r\n                          handleClick = {handleDeleteButtonClick}\r\n      /> \r\n    </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person","import React from \"react\"\r\nimport Person from \"./Person\"\r\n\r\n\r\nconst Persons = ({persons, filter, handleDeleteButtonClick}) => \r\n{\r\n  return (\r\n    <ul>\r\n    {persons.filter(\r\n            (person) => person.name\r\n                        .toLocaleLowerCase()\r\n                        .includes(filter.toLocaleLowerCase())\r\n            )\r\n            .map(\r\n                (person) => \r\n                <Person key = {person.id} \r\n                        person = {person}\r\n                        handleDeleteButtonClick = {handleDeleteButtonClick} \r\n                /> \r\n              )\r\n    }\r\n  </ul>\r\n  )\r\n}\r\n  \r\n    \r\n\r\nexport default Persons","import React from \"react\"\r\n\r\nconst Filter = ({filter, changeFilter}) =>  \r\n  <div>\r\n    filter shown with <input value = {filter} onChange = {changeFilter}/>\r\n  </div>\r\nexport default Filter","import React from \"react\"\r\n\r\nconst PersonForm = (props) =>\r\n      <form onSubmit = {props.addNumber}>\r\n        <div>\r\n          name: <input value = {props.newName} onChange = {props.changeNameInput}/>\r\n        </div>\r\n        <div>\r\n          number: <input value = {props.newPhoneNumber} onChange = {props.changePhoneInput}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\"> add </button>\r\n        </div>\r\n      </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({message, styleType}) =>\r\n{\r\n  if (message === null)\r\n  {\r\n    return null\r\n  } \r\n  return (\r\n    <div className = {styleType}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from '../services/personsBackend'\r\nimport Persons from './Persons'\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Notification from './Notification'\r\nimport \"../index.css\"\r\n\r\nconst App = () => \r\n{\r\n  const [persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState ('')\r\n  const [ filter, setFilter ] = useState ('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState (null)\r\n  const [ errorMessage, setErrorMessage ] = useState (null)\r\n  useEffect( () => \r\n                  { \r\n                    personService\r\n                    .getAll()\r\n                    .then(persons => setPersons(persons))\r\n                  } \r\n           , [])\r\n\r\n  const changeFilter = event => setFilter(event.target.value)\r\n  const changeNameInput = event => setNewName(event.target.value)\r\n  const changePhoneInput = event => setNewPhoneNumber(event.target.value)\r\n  const showMessage = (message) => \r\n                                {\r\n                                  setNotificationMessage (message)\r\n                                  setTimeout(() => setNotificationMessage(null), 5000)\r\n                                }\r\n  const showError = (error) =>\r\n                              {\r\n                                setErrorMessage (error)\r\n                                setTimeout(() => setErrorMessage (null), 5000)\r\n                              }\r\n\r\n  const addNumber = (event) => {\r\n    event.preventDefault()\r\n    if (newName === '' || newPhoneNumber === '')\r\n    {\r\n      alert (`You haven't filled all the fields yet.`)\r\n    } else if (persons.map  // bug, need to fecth data before searching. We will probably fix it in next parts of the course!\r\n                (person => person.name.toLocaleLowerCase())\r\n                .indexOf(newName.toLocaleLowerCase()) !== -1)\r\n    {\r\n      const index = persons.map(person => \r\n                                        person.name.toLocaleLowerCase())\r\n                          .indexOf(newName.toLocaleLowerCase())\r\n      console.log (index)\r\n      const newEntry = {\r\n        ...persons[index],\r\n        phone: newPhoneNumber\r\n      }\r\n      const toChange = window.confirm (`${newName} is already present in phonebook, replace the old number with the new one?`)\r\n      if (toChange)\r\n      {\r\n        personService.changePerson(persons[index].id, newEntry)\r\n                    .then(entry => \r\n                                  {\r\n                                    setPersons(persons.map(person =>\r\n                                                              {\r\n                                                                return (person.id !== entry.id \r\n                                                                        ? person \r\n                                                                        : entry)\r\n                                                              }\r\n                                                          )\r\n                                              )\r\n                                    showMessage(`Changed ${persons[index].name}'s phone to ${newEntry.phone}`)\r\n                                  }\r\n                          )\r\n                    .catch (error => \r\n                                    {\r\n                                      if (error.response.data)  showError(error.response.data.error)\r\n                                      else \r\n                                      {\r\n                                        showError (`Information of ${persons[index].id} has already been removed from server`)\r\n                                        setPersons (persons.filter(person => \r\n                                                                          {\r\n                                                                            return person.id !== persons[index].id\r\n                                                                          }\r\n                                                                 )\r\n                                                  )\r\n                                      }\r\n                                    }\r\n                           )             \r\n      }\r\n    } else \r\n    {\r\n      const newEntry = {\r\n                        name: newName,\r\n                        phone: newPhoneNumber,\r\n                       }\r\n      personService.addPerson(newEntry)\r\n                    .then(entry => \r\n                                      {\r\n                                        setPersons (persons.concat(entry))\r\n                                        setNewName('')\r\n                                        setNewPhoneNumber('')\r\n                                        showMessage (`Added ${newEntry.name} to the phonebook`)\r\n                                      }\r\n                          )\r\n                    .catch(error => showError(error.response.data.error))\r\n    }            \r\n  }\r\n\r\n  const handleDeleteButtonClick = personToDelete => \r\n  {\r\n    const toDelete = window.confirm (`Delete ${personToDelete.name}?`)\r\n    if (toDelete)\r\n    {\r\n      const request = personService.deletePerson(personToDelete.id)\r\n      request.then(() => \r\n                    { \r\n                      setPersons(persons.filter(entry => personToDelete.id !== entry.id))\r\n                      showMessage(`${personToDelete.name} has been removed from the phonebook`)\r\n                    })\r\n            .catch (error =>  \r\n                          {\r\n                              showError (`This person has already been deleted from phonebook`)\r\n                              setPersons (persons.filter(person => \r\n                                                                {\r\n                                                                  return person.id !== personToDelete.id\r\n                                                                }\r\n                                                        )\r\n                                         )\r\n                          })\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message = {notificationMessage} styleType = \"success\" />\r\n      <Notification message = {errorMessage} styleType = \"error\" />\r\n      <Filter filter = {filter} changeFilter = {changeFilter} />\r\n      <h3>add a new person: </h3>\r\n      <PersonForm addNumber = {addNumber}\r\n                  newName = {newName}\r\n                  changeNameInput = {changeNameInput}\r\n                  newPhoneNumber = {newPhoneNumber}\r\n                  changePhoneInput = {changePhoneInput}\r\n      />\r\n      <h3> Numbers </h3>\r\n        <Persons persons = {persons}\r\n                 filter = {filter} \r\n                 handleDeleteButtonClick = {handleDeleteButtonClick}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}